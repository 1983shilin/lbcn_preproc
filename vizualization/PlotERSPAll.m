function PlotERSPAll(sbj_name,project_name,block_names,dirs,elecs,locktype,column,conds,plot_params)


%% INPUTS
%       sbj_name: subject name
%       project_name: name of task
%       block_names: blocks to be analyed (cell of strings)
%       dirs: directories pointing to files of interest (generated by InitializeDirs)
%       elecs: can select subset of electrodes to epoch (default: all)
%       locktype: 'stim' or 'resp' (which event epoched data is locked to)
%       column: column of data.trialinfo by which to sort trials for plotting
%       conds:  cell containing specific conditions to plot within column (default: all of the conditions within column)
%       plot_params:    controls plot features (see genPlotParams.m script)


if isempty(plot_params)
    plot_params = genPlotParams(project_name,'ERSP');
end

% keep track of bad chans (from any block) for labeling plots
bad_chans = [];
for bi = 1:length(block_names)
    load([dirs.data_root,filesep,'OriginalData',filesep,sbj_name,filesep,'global_',project_name,'_',sbj_name,'_',block_names{bi},'.mat'])
    bad_chans = union(bad_chans,globalVar.badChan);
end

if iscell(elecs)
    elecs = ChanNamesToNums(globalVar,elecs);
end

if isempty(elecs)
    elecs = setdiff(1:globalVar.nchan,globalVar.refChan);
end

dir_out = [dirs.result_root,'/',project_name,'/',sbj_name,'/Figures/SpecData/',locktype,'lock'];

if ~exist(dir_out)
    mkdir(dir_out)
end
%% loop through electrodes and plot

tag = [locktype,'lock'];
if plot_params.blc
    tag = [tag,'_bl_corr'];
end
concatfield = {'wave'}; % concatenate amplitude across blocks

for ei = 1:length(elecs)
    el = elecs(ei);
    data_all.wave = [];
    data_all.trialinfo = [];
    
    data_all = concatBlocks(sbj_name,block_names,dirs,el,'Spec',concatfield,tag);
    if strcmp(plot_params.noise_method,'timepts')
        data_all = removeBadTimepts(data_all,plot_params.noise_fields_timepts);
    end
    
    if isempty(conds)
        tmp = find(~cellfun(@isempty,(data_all.trialinfo.(column))));
        conds = unique(data_all.trialinfo.(column)(tmp));
    end
    
    PlotERSP(data_all,column,conds,plot_params)
    fn_out = sprintf('%s/%s_%s_%s_ERSP_%slock.png',dir_out,sbj_name,data_all.label,project_name,locktype);
    saveas(gcf,fn_out)
    close
end

